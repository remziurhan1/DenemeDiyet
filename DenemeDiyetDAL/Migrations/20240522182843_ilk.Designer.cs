// <auto-generated />
using System;
using DenemeDiyetDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DenemeDiyetDAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240522182843_ilk")]
    partial class ilk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiyetDenemeDATA.TemelOgeler.DYemekKategorileri", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"), 1L, 1);

                    b.Property<string>("KategoriName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("KategoriID");

                    b.ToTable("YemekKategorileri");
                });

            modelBuilder.Entity("DiyetDenemeDATA.TemelOgeler.Ogunler", b =>
                {
                    b.Property<int>("OgunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgunID"), 1L, 1);

                    b.Property<string>("OgunAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OgunID");

                    b.ToTable("Ogunler");
                });

            modelBuilder.Entity("DiyetDenemeDATA.TemelOgeler.User", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"), 1L, 1);

                    b.Property<double>("Boy")
                        .HasColumnType("float");

                    b.Property<bool?>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GuvenlikSorusu")
                        .HasColumnType("int");

                    b.Property<string>("GuvenlikSorusuCevap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Kilo")
                        .HasColumnType("float");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiyetDenemeDATA.TemelOgeler.YemekCesitleri", b =>
                {
                    b.Property<int>("YemekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YemekID"), 1L, 1);

                    b.Property<int>("OgunID")
                        .HasColumnType("int");

                    b.Property<string>("YemekAdlari")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("YemekID");

                    b.HasIndex("OgunID");

                    b.ToTable("YemekCesitleri");
                });

            modelBuilder.Entity("YemekCesidiKategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("YemekID")
                        .HasColumnType("int");

                    b.HasKey("KategoriID", "YemekID");

                    b.HasIndex("YemekID");

                    b.ToTable("YemekCesidiKategori");
                });

            modelBuilder.Entity("DiyetDenemeDATA.TemelOgeler.YemekCesitleri", b =>
                {
                    b.HasOne("DiyetDenemeDATA.TemelOgeler.Ogunler", "Ogun")
                        .WithMany("YemekCesitleris")
                        .HasForeignKey("OgunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogun");
                });

            modelBuilder.Entity("YemekCesidiKategori", b =>
                {
                    b.HasOne("DiyetDenemeDATA.TemelOgeler.DYemekKategorileri", null)
                        .WithMany()
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetDenemeDATA.TemelOgeler.YemekCesitleri", null)
                        .WithMany()
                        .HasForeignKey("YemekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiyetDenemeDATA.TemelOgeler.Ogunler", b =>
                {
                    b.Navigation("YemekCesitleris");
                });
#pragma warning restore 612, 618
        }
    }
}
